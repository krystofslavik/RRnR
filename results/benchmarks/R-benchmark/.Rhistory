ylab="Speedup vs. plain mode", ltitle="Run mode")
create_barplot <- function(rec_diff, rec_err_min, rec_err_max, rep_diff, rep_err_min, rep_err_max, legend, col, ylab, ltitle)
{
num_values <- length(rec_diff)
agg <- as.matrix(rbind(rec_diff, rep_diff))
par(mar=c(10,4,2,4))
par(lty = 0)
lim_max <- 1#ceiling(max(max(rec_err_max), max(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
lim_min <- -0.4#floor(min(min(rec_err_max), min(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
bp <- barplot(agg, beside=T, legend=legend, col=col, ylim=c(lim_min,lim_max),
xaxt="n", yaxt="n", args.legend=list(x = "topright", bty = "n", title=ltitle,
inset=c(-0.10, 0)), ylab=ylab)
axis(2, seq(lim_min, lim_max, 0.1), labels=seq(lim_min+1, lim_max+1, 0.1))
#abline(h=lim_min:lim_max, col = "gray60", lty=2)
text(cex=1, x=colMeans(bp)+0.7, y=lim_min-0.05, colnames(agg), xpd=TRUE,
srt=90, pos=2)
labels <- as.matrix(rbind(lapply(rec_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else ""), lapply(rep_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else "")))
text(x = bp, y = lim_max - 0.2, label = labels,  pos = 3, cex = 0.8, col = "black")
err_min <- as.matrix(rbind(rec_err_min, rep_err_min))
err_max <- as.matrix(rbind(rec_err_max, rep_err_max))
arrows(bp, err_max - 1, bp, err_min - 1, angle=90, code=3, length=0.025, lty=1)
}
conf_int_t_coef <- function(alpha, n) qt((1 - alpha) / 2, df = n - 1) / sqrt(n)
# https://i.stack.imgur.com/vO8Ip.png (Confidence interval of ratio of two means - Fieller's theorem)
fieller <- function(a, err_a, b, err_b) {
g <- (qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * err_b / b)^2
se <- (a / b) / (1 - g) * sqrt((1 - g) * (err_a * err_a) / (a * a) + (err_b * err_b) / (b * b))
list(base = (a / b) / (1 - g), offset = qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * se)
}
num_values <- length(plain_results[,1])
avg_plain_results <- aggregate(. ~ mode, data = plain_results, mean)[-1]
plain_errors <- aggregate(. ~ mode, data = plain_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_record_results <- aggregate(. ~ mode, data = record_results, mean)[-1]
record_errors <- aggregate(. ~ mode, data = record_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_replay_results <- aggregate(. ~ mode, data = replay_results, mean)[-1]
replay_errors <- aggregate(. ~ mode, data = replay_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
record_ratio <- avg_plain_results / avg_record_results
f <- fieller(avg_plain_results, plain_errors, avg_record_results, record_errors)
record_ratio_error_min <- f$base - f$offset
record_ratio_error_max <- f$base + f$offset
replay_ratio <- avg_plain_results / avg_replay_results
f <- fieller(avg_plain_results, plain_errors, avg_replay_results, replay_errors)
replay_ratio_error_min <- f$base - f$offset
replay_ratio_error_max <- f$base + f$offset
create_barplot(record_ratio - 1, record_ratio_error_min, record_ratio_error_max,
replay_ratio - 1, replay_ratio_error_min, replay_ratio_error_max,
legend=c("record", "replay"), col=c("#26B3FF", "#FF1500"),
ylab="Speedup vs. plain mode", ltitle="Run mode")
create_barplot <- function(rec_diff, rec_err_min, rec_err_max, rep_diff, rep_err_min, rep_err_max, legend, col, ylab, ltitle)
{
num_values <- length(rec_diff)
agg <- as.matrix(rbind(rec_diff, rep_diff))
par(mar=c(10,4,2,4))
par(lty = 0)
lim_max <- 1#ceiling(max(max(rec_err_max), max(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
lim_min <- -0.4#floor(min(min(rec_err_max), min(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
bp <- barplot(agg, beside=T, legend=legend, col=col, ylim=c(lim_min,lim_max),
xaxt="n", yaxt="n", args.legend=list(x = "topright", bty = "n", title=ltitle,
inset=c(-0.10, 0)), ylab=ylab)
axis(2, seq(lim_min, lim_max, 0.1), labels=seq(lim_min+1, lim_max+1, 0.1))
#abline(h=lim_min:lim_max, col = "gray60", lty=2)
text(cex=1, x=colMeans(bp)+0.7, y=lim_min-0.05, colnames(agg), xpd=TRUE,
srt=90, pos=2)
labels <- as.matrix(rbind(lapply(rec_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else ""), lapply(rep_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else "")))
text(x = bp, y = lim_max - 0, label = labels,  pos = 3, cex = 0.8, col = "black")
err_min <- as.matrix(rbind(rec_err_min, rep_err_min))
err_max <- as.matrix(rbind(rec_err_max, rep_err_max))
arrows(bp, err_max - 1, bp, err_min - 1, angle=90, code=3, length=0.025, lty=1)
}
conf_int_t_coef <- function(alpha, n) qt((1 - alpha) / 2, df = n - 1) / sqrt(n)
# https://i.stack.imgur.com/vO8Ip.png (Confidence interval of ratio of two means - Fieller's theorem)
fieller <- function(a, err_a, b, err_b) {
g <- (qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * err_b / b)^2
se <- (a / b) / (1 - g) * sqrt((1 - g) * (err_a * err_a) / (a * a) + (err_b * err_b) / (b * b))
list(base = (a / b) / (1 - g), offset = qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * se)
}
num_values <- length(plain_results[,1])
avg_plain_results <- aggregate(. ~ mode, data = plain_results, mean)[-1]
plain_errors <- aggregate(. ~ mode, data = plain_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_record_results <- aggregate(. ~ mode, data = record_results, mean)[-1]
record_errors <- aggregate(. ~ mode, data = record_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_replay_results <- aggregate(. ~ mode, data = replay_results, mean)[-1]
replay_errors <- aggregate(. ~ mode, data = replay_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
record_ratio <- avg_plain_results / avg_record_results
f <- fieller(avg_plain_results, plain_errors, avg_record_results, record_errors)
record_ratio_error_min <- f$base - f$offset
record_ratio_error_max <- f$base + f$offset
replay_ratio <- avg_plain_results / avg_replay_results
f <- fieller(avg_plain_results, plain_errors, avg_replay_results, replay_errors)
replay_ratio_error_min <- f$base - f$offset
replay_ratio_error_max <- f$base + f$offset
create_barplot(record_ratio - 1, record_ratio_error_min, record_ratio_error_max,
replay_ratio - 1, replay_ratio_error_min, replay_ratio_error_max,
legend=c("record", "replay"), col=c("#26B3FF", "#FF1500"),
ylab="Speedup vs. plain mode", ltitle="Run mode")
create_barplot <- function(rec_diff, rec_err_min, rec_err_max, rep_diff, rep_err_min, rep_err_max, legend, col, ylab, ltitle)
{
num_values <- length(rec_diff)
agg <- as.matrix(rbind(rec_diff, rep_diff))
par(mar=c(10,4,2,4))
par(lty = 0)
lim_max <- 1#ceiling(max(max(rec_err_max), max(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
lim_min <- -0.4#floor(min(min(rec_err_max), min(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
bp <- barplot(agg, beside=T, legend=legend, col=col, ylim=c(lim_min,lim_max),
xaxt="n", yaxt="n", args.legend=list(x = "topright", bty = "n", title=ltitle,
inset=c(-0.10, 0)), ylab=ylab)
axis(2, seq(lim_min, lim_max, 0.1), labels=seq(lim_min+1, lim_max+1, 0.1))
#abline(h=lim_min:lim_max, col = "gray60", lty=2)
text(cex=1, x=colMeans(bp)+0.7, y=lim_min-0.05, colnames(agg), xpd=TRUE,
srt=90, pos=2)
labels <- as.matrix(rbind(lapply(rec_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else ""), lapply(rep_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else "")))
text(x = bp, y = lim_max - 0.05, label = labels,  pos = 3, cex = 0.8, col = "black")
err_min <- as.matrix(rbind(rec_err_min, rep_err_min))
err_max <- as.matrix(rbind(rec_err_max, rep_err_max))
arrows(bp, err_max - 1, bp, err_min - 1, angle=90, code=3, length=0.025, lty=1)
}
conf_int_t_coef <- function(alpha, n) qt((1 - alpha) / 2, df = n - 1) / sqrt(n)
# https://i.stack.imgur.com/vO8Ip.png (Confidence interval of ratio of two means - Fieller's theorem)
fieller <- function(a, err_a, b, err_b) {
g <- (qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * err_b / b)^2
se <- (a / b) / (1 - g) * sqrt((1 - g) * (err_a * err_a) / (a * a) + (err_b * err_b) / (b * b))
list(base = (a / b) / (1 - g), offset = qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * se)
}
num_values <- length(plain_results[,1])
avg_plain_results <- aggregate(. ~ mode, data = plain_results, mean)[-1]
plain_errors <- aggregate(. ~ mode, data = plain_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_record_results <- aggregate(. ~ mode, data = record_results, mean)[-1]
record_errors <- aggregate(. ~ mode, data = record_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_replay_results <- aggregate(. ~ mode, data = replay_results, mean)[-1]
replay_errors <- aggregate(. ~ mode, data = replay_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
record_ratio <- avg_plain_results / avg_record_results
f <- fieller(avg_plain_results, plain_errors, avg_record_results, record_errors)
record_ratio_error_min <- f$base - f$offset
record_ratio_error_max <- f$base + f$offset
replay_ratio <- avg_plain_results / avg_replay_results
f <- fieller(avg_plain_results, plain_errors, avg_replay_results, replay_errors)
replay_ratio_error_min <- f$base - f$offset
replay_ratio_error_max <- f$base + f$offset
create_barplot(record_ratio - 1, record_ratio_error_min, record_ratio_error_max,
replay_ratio - 1, replay_ratio_error_min, replay_ratio_error_max,
legend=c("record", "replay"), col=c("#26B3FF", "#FF1500"),
ylab="Speedup vs. plain mode", ltitle="Run mode")
create_barplot <- function(rec_diff, rec_err_min, rec_err_max, rep_diff, rep_err_min, rep_err_max, legend, col, ylab, ltitle)
{
num_values <- length(rec_diff)
agg <- as.matrix(rbind(rec_diff, rep_diff))
par(mar=c(10,4,2,4))
par(lty = 0)
lim_max <- 1#ceiling(max(max(rec_err_max), max(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
lim_min <- -0.4#floor(min(min(rec_err_max), min(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
bp <- barplot(agg, beside=T, legend=legend, col=col, ylim=c(lim_min,lim_max),
xaxt="n", yaxt="n", args.legend=list(x = "topright", bty = "n", title=ltitle,
inset=c(-0.10, 0)), ylab=ylab)
axis(2, seq(lim_min, lim_max, 0.1), labels=seq(lim_min+1, lim_max+1, 0.1))
#abline(h=lim_min:lim_max, col = "gray60", lty=2)
text(cex=1, x=colMeans(bp)+0.7, y=lim_min-0.05, colnames(agg), xpd=TRUE,
srt=90, pos=2)
labels <- as.matrix(rbind(lapply(rec_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else ""), lapply(rep_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else "")))
text(x = bp, y = lim_max - 0.1, label = labels,  pos = 3, cex = 0.8, col = "black")
err_min <- as.matrix(rbind(rec_err_min, rep_err_min))
err_max <- as.matrix(rbind(rec_err_max, rep_err_max))
arrows(bp, err_max - 1, bp, err_min - 1, angle=90, code=3, length=0.025, lty=1)
}
conf_int_t_coef <- function(alpha, n) qt((1 - alpha) / 2, df = n - 1) / sqrt(n)
# https://i.stack.imgur.com/vO8Ip.png (Confidence interval of ratio of two means - Fieller's theorem)
fieller <- function(a, err_a, b, err_b) {
g <- (qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * err_b / b)^2
se <- (a / b) / (1 - g) * sqrt((1 - g) * (err_a * err_a) / (a * a) + (err_b * err_b) / (b * b))
list(base = (a / b) / (1 - g), offset = qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * se)
}
num_values <- length(plain_results[,1])
avg_plain_results <- aggregate(. ~ mode, data = plain_results, mean)[-1]
plain_errors <- aggregate(. ~ mode, data = plain_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_record_results <- aggregate(. ~ mode, data = record_results, mean)[-1]
record_errors <- aggregate(. ~ mode, data = record_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_replay_results <- aggregate(. ~ mode, data = replay_results, mean)[-1]
replay_errors <- aggregate(. ~ mode, data = replay_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
record_ratio <- avg_plain_results / avg_record_results
f <- fieller(avg_plain_results, plain_errors, avg_record_results, record_errors)
record_ratio_error_min <- f$base - f$offset
record_ratio_error_max <- f$base + f$offset
replay_ratio <- avg_plain_results / avg_replay_results
f <- fieller(avg_plain_results, plain_errors, avg_replay_results, replay_errors)
replay_ratio_error_min <- f$base - f$offset
replay_ratio_error_max <- f$base + f$offset
create_barplot(record_ratio - 1, record_ratio_error_min, record_ratio_error_max,
replay_ratio - 1, replay_ratio_error_min, replay_ratio_error_max,
legend=c("record", "replay"), col=c("#26B3FF", "#FF1500"),
ylab="Speedup vs. plain mode", ltitle="Run mode")
create_barplot <- function(rec_diff, rec_err_min, rec_err_max, rep_diff, rep_err_min, rep_err_max, legend, col, ylab, ltitle)
{
num_values <- length(rec_diff)
agg <- as.matrix(rbind(rec_diff, rep_diff))
par(mar=c(10,4,2,4))
par(lty = 0)
lim_max <- 1#ceiling(max(max(rec_err_max), max(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
lim_min <- -0.4#floor(min(min(rec_err_max), min(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
bp <- barplot(agg, beside=T, legend=legend, col=col, ylim=c(lim_min,lim_max),
xaxt="n", yaxt="n", args.legend=list(x = "topright", bty = "n", title=ltitle,
inset=c(-0.10, 0)), ylab=ylab, xpd = FALSE)
axis(2, seq(lim_min, lim_max, 0.1), labels=seq(lim_min+1, lim_max+1, 0.1))
#abline(h=lim_min:lim_max, col = "gray60", lty=2)
text(cex=1, x=colMeans(bp)+0.7, y=lim_min-0.05, colnames(agg), xpd=TRUE,
srt=90, pos=2)
labels <- as.matrix(rbind(lapply(rec_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else ""), lapply(rep_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else "")))
text(x = bp, y = lim_max - 0.1, label = labels,  pos = 3, cex = 0.8, col = "black")
err_min <- as.matrix(rbind(rec_err_min, rep_err_min))
err_max <- as.matrix(rbind(rec_err_max, rep_err_max))
arrows(bp, err_max - 1, bp, err_min - 1, angle=90, code=3, length=0.025, lty=1)
}
conf_int_t_coef <- function(alpha, n) qt((1 - alpha) / 2, df = n - 1) / sqrt(n)
# https://i.stack.imgur.com/vO8Ip.png (Confidence interval of ratio of two means - Fieller's theorem)
fieller <- function(a, err_a, b, err_b) {
g <- (qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * err_b / b)^2
se <- (a / b) / (1 - g) * sqrt((1 - g) * (err_a * err_a) / (a * a) + (err_b * err_b) / (b * b))
list(base = (a / b) / (1 - g), offset = qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * se)
}
num_values <- length(plain_results[,1])
avg_plain_results <- aggregate(. ~ mode, data = plain_results, mean)[-1]
plain_errors <- aggregate(. ~ mode, data = plain_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_record_results <- aggregate(. ~ mode, data = record_results, mean)[-1]
record_errors <- aggregate(. ~ mode, data = record_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_replay_results <- aggregate(. ~ mode, data = replay_results, mean)[-1]
replay_errors <- aggregate(. ~ mode, data = replay_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
record_ratio <- avg_plain_results / avg_record_results
f <- fieller(avg_plain_results, plain_errors, avg_record_results, record_errors)
record_ratio_error_min <- f$base - f$offset
record_ratio_error_max <- f$base + f$offset
replay_ratio <- avg_plain_results / avg_replay_results
f <- fieller(avg_plain_results, plain_errors, avg_replay_results, replay_errors)
replay_ratio_error_min <- f$base - f$offset
replay_ratio_error_max <- f$base + f$offset
create_barplot(record_ratio - 1, record_ratio_error_min, record_ratio_error_max,
replay_ratio - 1, replay_ratio_error_min, replay_ratio_error_max,
legend=c("record", "replay"), col=c("#26B3FF", "#FF1500"),
ylab="Speedup vs. plain mode", ltitle="Run mode")
create_barplot <- function(rec_diff, rec_err_min, rec_err_max, rep_diff, rep_err_min, rep_err_max, legend, col, ylab, ltitle)
{
num_values <- length(rec_diff)
agg <- as.matrix(rbind(rec_diff, rep_diff))
par(mar=c(10,4,2,4))
par(lty = 0)
lim_max <- 1#ceiling(max(max(rec_err_max), max(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
lim_min <- -0.4#floor(min(min(rec_err_max), min(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
bp <- barplot(agg, beside=T, legend=legend, col=col, ylim=c(lim_min,lim_max),
xaxt="n", yaxt="n", args.legend=list(x = "topright", bty = "n", title=ltitle,
inset=c(-0.10, 0)), ylab=ylab, xpd = FALSE)
axis(2, seq(lim_min, lim_max, 0.1), labels=seq(lim_min+1, lim_max+1, 0.1))
#abline(h=lim_min:lim_max, col = "gray60", lty=2)
#text(cex=1, x=colMeans(bp)+0.7, y=lim_min-0.05, colnames(agg), xpd=TRUE,srt=90, pos=2)
labels <- as.matrix(rbind(lapply(rec_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else ""), lapply(rep_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else "")))
text(x = bp, y = lim_max - 0.1, label = labels,  pos = 3, cex = 0.8, col = "black")
err_min <- as.matrix(rbind(rec_err_min, rep_err_min))
err_max <- as.matrix(rbind(rec_err_max, rep_err_max))
arrows(bp, err_max - 1, bp, err_min - 1, angle=90, code=3, length=0.025, lty=1)
}
conf_int_t_coef <- function(alpha, n) qt((1 - alpha) / 2, df = n - 1) / sqrt(n)
# https://i.stack.imgur.com/vO8Ip.png (Confidence interval of ratio of two means - Fieller's theorem)
fieller <- function(a, err_a, b, err_b) {
g <- (qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * err_b / b)^2
se <- (a / b) / (1 - g) * sqrt((1 - g) * (err_a * err_a) / (a * a) + (err_b * err_b) / (b * b))
list(base = (a / b) / (1 - g), offset = qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * se)
}
num_values <- length(plain_results[,1])
avg_plain_results <- aggregate(. ~ mode, data = plain_results, mean)[-1]
plain_errors <- aggregate(. ~ mode, data = plain_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_record_results <- aggregate(. ~ mode, data = record_results, mean)[-1]
record_errors <- aggregate(. ~ mode, data = record_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_replay_results <- aggregate(. ~ mode, data = replay_results, mean)[-1]
replay_errors <- aggregate(. ~ mode, data = replay_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
record_ratio <- avg_plain_results / avg_record_results
f <- fieller(avg_plain_results, plain_errors, avg_record_results, record_errors)
record_ratio_error_min <- f$base - f$offset
record_ratio_error_max <- f$base + f$offset
replay_ratio <- avg_plain_results / avg_replay_results
f <- fieller(avg_plain_results, plain_errors, avg_replay_results, replay_errors)
replay_ratio_error_min <- f$base - f$offset
replay_ratio_error_max <- f$base + f$offset
create_barplot(record_ratio - 1, record_ratio_error_min, record_ratio_error_max,
replay_ratio - 1, replay_ratio_error_min, replay_ratio_error_max,
legend=c("record", "replay"), col=c("#26B3FF", "#FF1500"),
ylab="Speedup vs. plain mode", ltitle="Run mode")
create_barplot <- function(rec_diff, rec_err_min, rec_err_max, rep_diff, rep_err_min, rep_err_max, legend, col, ylab, ltitle)
{
num_values <- length(rec_diff)
agg <- as.matrix(rbind(rec_diff, rep_diff))
par(mar=c(10,4,2,4))
par(lty = 0)
lim_max <- 1#ceiling(max(max(rec_err_max), max(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
lim_min <- -0.4#floor(min(min(rec_err_max), min(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
bp <- barplot(agg, beside=T, legend=legend, col=col, ylim=c(lim_min,lim_max),
xaxt="n", yaxt="n", args.legend=list(x = "topright", bty = "n", title=ltitle,
inset=c(-0.10, 0)), ylab=ylab, xpd = FALSE)
axis(2, seq(lim_min, lim_max, 0.1), labels=seq(lim_min+1, lim_max+1, 0.1))
#abline(h=lim_min:lim_max, col = "gray60", lty=2)
text(cex=1, x=colMeans(bp)+0.7, y=lim_min-0.05, colnames(agg), xpd=TRUE,srt=90, pos=2)
labels <- as.matrix(rbind(lapply(rec_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else ""), lapply(rep_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else "")))
text(x = bp, y = lim_max - 0.1, label = labels,  pos = 3, cex = 0.8, col = "black")
err_min <- as.matrix(rbind(rec_err_min, rep_err_min))
err_max <- as.matrix(rbind(rec_err_max, rep_err_max))
arrows(bp, err_max - 1, bp, err_min - 1, angle=90, code=3, length=0.025, lty=1)
}
conf_int_t_coef <- function(alpha, n) qt((1 - alpha) / 2, df = n - 1) / sqrt(n)
# https://i.stack.imgur.com/vO8Ip.png (Confidence interval of ratio of two means - Fieller's theorem)
fieller <- function(a, err_a, b, err_b) {
g <- (qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * err_b / b)^2
se <- (a / b) / (1 - g) * sqrt((1 - g) * (err_a * err_a) / (a * a) + (err_b * err_b) / (b * b))
list(base = (a / b) / (1 - g), offset = qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * se)
}
num_values <- length(plain_results[,1])
avg_plain_results <- aggregate(. ~ mode, data = plain_results, mean)[-1]
plain_errors <- aggregate(. ~ mode, data = plain_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_record_results <- aggregate(. ~ mode, data = record_results, mean)[-1]
record_errors <- aggregate(. ~ mode, data = record_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_replay_results <- aggregate(. ~ mode, data = replay_results, mean)[-1]
replay_errors <- aggregate(. ~ mode, data = replay_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
record_ratio <- avg_plain_results / avg_record_results
f <- fieller(avg_plain_results, plain_errors, avg_record_results, record_errors)
record_ratio_error_min <- f$base - f$offset
record_ratio_error_max <- f$base + f$offset
replay_ratio <- avg_plain_results / avg_replay_results
f <- fieller(avg_plain_results, plain_errors, avg_replay_results, replay_errors)
replay_ratio_error_min <- f$base - f$offset
replay_ratio_error_max <- f$base + f$offset
create_barplot(record_ratio - 1, record_ratio_error_min, record_ratio_error_max,
replay_ratio - 1, replay_ratio_error_min, replay_ratio_error_max,
legend=c("record", "replay"), col=c("#26B3FF", "#FF1500"),
ylab="Speedup vs. plain mode", ltitle="Run mode")
create_barplot <- function(rec_diff, rec_err_min, rec_err_max, rep_diff, rep_err_min, rep_err_max, legend, col, ylab, ltitle)
{
num_values <- length(rec_diff)
agg <- as.matrix(rbind(rec_diff, rep_diff))
par(mar=c(10,4,2,4))
par(lty = 0)
lim_max <- 1#ceiling(max(max(rec_err_max), max(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
lim_min <- -0.4#floor(min(min(rec_err_max), min(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
bp <- barplot(agg, beside=T, legend=legend, col=col, ylim=c(lim_min,lim_max),
xaxt="n", yaxt="n", args.legend=list(x = "topright", bty = "n", title=ltitle,
inset=c(-0.10, 0)), ylab=ylab, xpd = FALSE)
axis(2, seq(lim_min, lim_max, 0.1), labels=seq(lim_min+1, lim_max+1, 0.1))
#abline(h=lim_min:lim_max, col = "gray60", lty=2)
text(cex=1, x=colMeans(bp)+0.7, y=lim_min-0.05, colnames(agg), xpd=TRUE,srt=90, pos=2)
labels <- as.matrix(rbind(lapply(rec_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else ""), lapply(rep_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else "")))
text(x = bp, y = lim_max - 0.1, label = labels,  pos = 3, cex = 0.8, col = "black", xpd = TRUE)
err_min <- as.matrix(rbind(rec_err_min, rep_err_min))
err_max <- as.matrix(rbind(rec_err_max, rep_err_max))
arrows(bp, err_max - 1, bp, err_min - 1, angle=90, code=3, length=0.025, lty=1)
}
conf_int_t_coef <- function(alpha, n) qt((1 - alpha) / 2, df = n - 1) / sqrt(n)
# https://i.stack.imgur.com/vO8Ip.png (Confidence interval of ratio of two means - Fieller's theorem)
fieller <- function(a, err_a, b, err_b) {
g <- (qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * err_b / b)^2
se <- (a / b) / (1 - g) * sqrt((1 - g) * (err_a * err_a) / (a * a) + (err_b * err_b) / (b * b))
list(base = (a / b) / (1 - g), offset = qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * se)
}
num_values <- length(plain_results[,1])
avg_plain_results <- aggregate(. ~ mode, data = plain_results, mean)[-1]
plain_errors <- aggregate(. ~ mode, data = plain_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_record_results <- aggregate(. ~ mode, data = record_results, mean)[-1]
record_errors <- aggregate(. ~ mode, data = record_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_replay_results <- aggregate(. ~ mode, data = replay_results, mean)[-1]
replay_errors <- aggregate(. ~ mode, data = replay_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
record_ratio <- avg_plain_results / avg_record_results
f <- fieller(avg_plain_results, plain_errors, avg_record_results, record_errors)
record_ratio_error_min <- f$base - f$offset
record_ratio_error_max <- f$base + f$offset
replay_ratio <- avg_plain_results / avg_replay_results
f <- fieller(avg_plain_results, plain_errors, avg_replay_results, replay_errors)
replay_ratio_error_min <- f$base - f$offset
replay_ratio_error_max <- f$base + f$offset
create_barplot(record_ratio - 1, record_ratio_error_min, record_ratio_error_max,
replay_ratio - 1, replay_ratio_error_min, replay_ratio_error_max,
legend=c("record", "replay"), col=c("#26B3FF", "#FF1500"),
ylab="Speedup vs. plain mode", ltitle="Run mode")
create_barplot <- function(rec_diff, rec_err_min, rec_err_max, rep_diff, rep_err_min, rep_err_max, legend, col, ylab, ltitle)
{
num_values <- length(rec_diff)
agg <- as.matrix(rbind(rec_diff, rep_diff))
par(mar=c(10,4,2,4))
par(lty = 0)
lim_max <- 1#ceiling(max(max(rec_err_max), max(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
lim_min <- -0.4#floor(min(min(rec_err_max), min(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
bp <- barplot(agg, beside=T, legend=legend, col=col, ylim=c(lim_min,lim_max),
xaxt="n", yaxt="n", args.legend=list(x = "topright", bty = "n", title=ltitle,
inset=c(-0.10, 0)), ylab=ylab, xpd = FALSE)
axis(2, seq(lim_min, lim_max, 0.1), labels=seq(lim_min+1, lim_max+1, 0.1))
#abline(h=lim_min:lim_max, col = "gray60", lty=2)
text(cex=1, x=colMeans(bp)+0.7, y=lim_min-0.05, colnames(agg), xpd=TRUE,srt=90, pos=2)
labels <- as.matrix(rbind(lapply(rec_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else ""), lapply(rep_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else "")))
#text(x = bp, y = lim_max - 0.1, label = labels,  pos = 3, cex = 0.8, col = "black", xpd = TRUE)
err_min <- as.matrix(rbind(rec_err_min, rep_err_min))
err_max <- as.matrix(rbind(rec_err_max, rep_err_max))
arrows(bp, err_max - 1, bp, err_min - 1, angle=90, code=3, length=0.025, lty=1)
}
conf_int_t_coef <- function(alpha, n) qt((1 - alpha) / 2, df = n - 1) / sqrt(n)
# https://i.stack.imgur.com/vO8Ip.png (Confidence interval of ratio of two means - Fieller's theorem)
fieller <- function(a, err_a, b, err_b) {
g <- (qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * err_b / b)^2
se <- (a / b) / (1 - g) * sqrt((1 - g) * (err_a * err_a) / (a * a) + (err_b * err_b) / (b * b))
list(base = (a / b) / (1 - g), offset = qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * se)
}
num_values <- length(plain_results[,1])
avg_plain_results <- aggregate(. ~ mode, data = plain_results, mean)[-1]
plain_errors <- aggregate(. ~ mode, data = plain_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_record_results <- aggregate(. ~ mode, data = record_results, mean)[-1]
record_errors <- aggregate(. ~ mode, data = record_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_replay_results <- aggregate(. ~ mode, data = replay_results, mean)[-1]
replay_errors <- aggregate(. ~ mode, data = replay_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
record_ratio <- avg_plain_results / avg_record_results
f <- fieller(avg_plain_results, plain_errors, avg_record_results, record_errors)
record_ratio_error_min <- f$base - f$offset
record_ratio_error_max <- f$base + f$offset
replay_ratio <- avg_plain_results / avg_replay_results
f <- fieller(avg_plain_results, plain_errors, avg_replay_results, replay_errors)
replay_ratio_error_min <- f$base - f$offset
replay_ratio_error_max <- f$base + f$offset
create_barplot(record_ratio - 1, record_ratio_error_min, record_ratio_error_max,
replay_ratio - 1, replay_ratio_error_min, replay_ratio_error_max,
legend=c("record", "replay"), col=c("#26B3FF", "#FF1500"),
ylab="Speedup vs. plain mode", ltitle="Run mode")
create_barplot <- function(rec_diff, rec_err_min, rec_err_max, rep_diff, rep_err_min, rep_err_max, legend, col, ylab, ltitle)
{
num_values <- length(rec_diff)
agg <- as.matrix(rbind(rec_diff, rep_diff))
par(mar=c(10,4,2,4))
par(lty = 0)
lim_max <- 1#ceiling(max(max(rec_err_max), max(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
lim_min <- -0.4#floor(min(min(rec_err_max), min(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
bp <- barplot(agg, beside=T, legend=legend, col=col, ylim=c(lim_min,lim_max),
xaxt="n", yaxt="n", args.legend=list(x = "topright", bty = "n", title=ltitle,
inset=c(-0.10, 0)), ylab=ylab, xpd = FALSE)
axis(2, seq(lim_min, lim_max, 0.1), labels=seq(lim_min+1, lim_max+1, 0.1))
#abline(h=lim_min:lim_max, col = "gray60", lty=2)
text(cex=1, x=colMeans(bp)+0.7, y=lim_min-0.05, colnames(agg), xpd=TRUE,srt=90, pos=2)
labels <- as.matrix(rbind(lapply(rec_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else ""), lapply(rep_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else "")))
text(x = bp, y = lim_max, label = labels,  pos = 3, cex = 0.8, col = "black", xpd = TRUE)
err_min <- as.matrix(rbind(rec_err_min, rep_err_min))
err_max <- as.matrix(rbind(rec_err_max, rep_err_max))
arrows(bp, err_max - 1, bp, err_min - 1, angle=90, code=3, length=0.025, lty=1)
}
conf_int_t_coef <- function(alpha, n) qt((1 - alpha) / 2, df = n - 1) / sqrt(n)
# https://i.stack.imgur.com/vO8Ip.png (Confidence interval of ratio of two means - Fieller's theorem)
fieller <- function(a, err_a, b, err_b) {
g <- (qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * err_b / b)^2
se <- (a / b) / (1 - g) * sqrt((1 - g) * (err_a * err_a) / (a * a) + (err_b * err_b) / (b * b))
list(base = (a / b) / (1 - g), offset = qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * se)
}
num_values <- length(plain_results[,1])
avg_plain_results <- aggregate(. ~ mode, data = plain_results, mean)[-1]
plain_errors <- aggregate(. ~ mode, data = plain_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_record_results <- aggregate(. ~ mode, data = record_results, mean)[-1]
record_errors <- aggregate(. ~ mode, data = record_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_replay_results <- aggregate(. ~ mode, data = replay_results, mean)[-1]
replay_errors <- aggregate(. ~ mode, data = replay_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
record_ratio <- avg_plain_results / avg_record_results
f <- fieller(avg_plain_results, plain_errors, avg_record_results, record_errors)
record_ratio_error_min <- f$base - f$offset
record_ratio_error_max <- f$base + f$offset
replay_ratio <- avg_plain_results / avg_replay_results
f <- fieller(avg_plain_results, plain_errors, avg_replay_results, replay_errors)
replay_ratio_error_min <- f$base - f$offset
replay_ratio_error_max <- f$base + f$offset
create_barplot(record_ratio - 1, record_ratio_error_min, record_ratio_error_max,
replay_ratio - 1, replay_ratio_error_min, replay_ratio_error_max,
legend=c("record", "replay"), col=c("#26B3FF", "#FF1500"),
ylab="Speedup vs. plain mode", ltitle="Run mode")
create_barplot <- function(rec_diff, rec_err_min, rec_err_max, rep_diff, rep_err_min, rep_err_max, legend, col, ylab, ltitle)
{
num_values <- length(rec_diff)
agg <- as.matrix(rbind(rec_diff, rep_diff))
par(mar=c(10,4,2,4))
par(lty = 0)
lim_max <- 1#ceiling(max(max(rec_err_max), max(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
lim_min <- -0.4#floor(min(min(rec_err_max), min(rec_err_min), max(rep_err_max), max(rep_err_min)) * 10) / 10 - 1
bp <- barplot(agg, beside=T, legend=legend, col=col, ylim=c(lim_min,lim_max),
xaxt="n", yaxt="n", args.legend=list(x = "topright", bty = "n", title=ltitle,
inset=c(-0.10, 0), xpd = TRUE), ylab=ylab, xpd = FALSE)
axis(2, seq(lim_min, lim_max, 0.1), labels=seq(lim_min+1, lim_max+1, 0.1))
#abline(h=lim_min:lim_max, col = "gray60", lty=2)
text(cex=1, x=colMeans(bp)+0.7, y=lim_min-0.05, colnames(agg), xpd=TRUE,srt=90, pos=2)
labels <- as.matrix(rbind(lapply(rec_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else ""), lapply(rep_diff, function(x) if(x > lim_max) ceiling((x+1)*10)/10 else "")))
text(x = bp, y = lim_max, label = labels,  pos = 3, cex = 0.8, col = "black", xpd = TRUE)
err_min <- as.matrix(rbind(rec_err_min, rep_err_min))
err_max <- as.matrix(rbind(rec_err_max, rep_err_max))
arrows(bp, err_max - 1, bp, err_min - 1, angle=90, code=3, length=0.025, lty=1)
}
conf_int_t_coef <- function(alpha, n) qt((1 - alpha) / 2, df = n - 1) / sqrt(n)
# https://i.stack.imgur.com/vO8Ip.png (Confidence interval of ratio of two means - Fieller's theorem)
fieller <- function(a, err_a, b, err_b) {
g <- (qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * err_b / b)^2
se <- (a / b) / (1 - g) * sqrt((1 - g) * (err_a * err_a) / (a * a) + (err_b * err_b) / (b * b))
list(base = (a / b) / (1 - g), offset = qt((1 - 0.95) / 2, df = length(a) + length(b) - 2) * se)
}
num_values <- length(plain_results[,1])
avg_plain_results <- aggregate(. ~ mode, data = plain_results, mean)[-1]
plain_errors <- aggregate(. ~ mode, data = plain_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_record_results <- aggregate(. ~ mode, data = record_results, mean)[-1]
record_errors <- aggregate(. ~ mode, data = record_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
avg_replay_results <- aggregate(. ~ mode, data = replay_results, mean)[-1]
replay_errors <- aggregate(. ~ mode, data = replay_results, sd)[-1] * conf_int_t_coef(0.95, num_values)
record_ratio <- avg_plain_results / avg_record_results
f <- fieller(avg_plain_results, plain_errors, avg_record_results, record_errors)
record_ratio_error_min <- f$base - f$offset
record_ratio_error_max <- f$base + f$offset
replay_ratio <- avg_plain_results / avg_replay_results
f <- fieller(avg_plain_results, plain_errors, avg_replay_results, replay_errors)
replay_ratio_error_min <- f$base - f$offset
replay_ratio_error_max <- f$base + f$offset
create_barplot(record_ratio - 1, record_ratio_error_min, record_ratio_error_max,
replay_ratio - 1, replay_ratio_error_min, replay_ratio_error_max,
legend=c("record", "replay"), col=c("#26B3FF", "#FF1500"),
ylab="Speedup vs. plain mode", ltitle="Run mode")
